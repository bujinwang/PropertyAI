name: Master CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  verify-backend:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Lint
      working-directory: ./backend
      run: npm run lint
    
    - name: Build
      working-directory: ./backend
      run: npm run build
    
    - name: Run tests
      working-directory: ./backend
      run: npm test
      
    - name: Generate Prisma client
      working-directory: ./backend
      run: npm run prisma:generate
  
  verify-dashboard:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: dashboard/package-lock.json
    
    - name: Install dependencies
      working-directory: ./dashboard
      run: npm ci
    
    - name: Build
      working-directory: ./dashboard
      run: npm run build
      
    # Add tests when available
    # - name: Run tests
    #   working-directory: ./dashboard
    #   run: npm test
  
  verify-propertyapp:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: propertyapp/package-lock.json
    
    - name: Install dependencies
      working-directory: ./propertyapp
      run: npm ci
    
    - name: Lint
      working-directory: ./propertyapp
      run: npm run lint
    
    - name: Run tests
      working-directory: ./propertyapp
      run: npm test
  
  # This job only runs when all verifications pass
  notify-success:
    needs: [verify-backend, verify-dashboard, verify-propertyapp]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Notification
      run: |
        echo "All verification jobs completed successfully!"
        # You could add a notification step here, e.g. sending a Slack message or email
        # Example with Slack (requires setting up a SLACK_WEBHOOK_URL secret):
        # curl -X POST -H 'Content-type: application/json' --data '{"text":"âœ… All CI checks passed for ${{ github.repository }}!"}' ${{ secrets.SLACK_WEBHOOK_URL }} 