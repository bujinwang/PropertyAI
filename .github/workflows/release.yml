name: Release

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '20.x'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build all components
      run: npm run build

    - name: Create Release Notes
      id: release_notes
      run: |
        # Generate release notes from git log
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "RELEASE_NOTES=Initial release" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## What's Changed
          ${{ steps.release_notes.outputs.RELEASE_NOTES }}
          
          ## Installation
          ```bash
          git clone https://github.com/PropertyAI/PropertyAI.git
          cd PropertyAI
          npm run install:all
          ```
          
          ## Quick Start
          See our [Getting Started Guide](https://github.com/PropertyAI/PropertyAI#quick-start) for setup instructions.
        draft: false
        prerelease: false

  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: build-and-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: propertyai/backend,propertyai/dashboard
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        platforms: linux/amd64,linux/arm64
        push: true
        tags: propertyai/backend:${{ github.ref_name }},propertyai/backend:latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push dashboard image
      uses: docker/build-push-action@v5
      with:
        context: ./dashboard
        platforms: linux/amd64,linux/arm64
        push: true
        tags: propertyai/dashboard:${{ github.ref_name }},propertyai/dashboard:latest
        labels: ${{ steps.meta.outputs.labels }}