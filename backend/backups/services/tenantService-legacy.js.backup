const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

// Existing CRUD assumed, extending updateTenant for payment fields
const updateTenant = async (tenantId, updates) => {
  const tenant = await prisma.tenant.findUnique({
    where: { id: tenantId }
  });
  if (!tenant) {
    throw new Error('Tenant not found');
  }

  // Prepare update data
  const updateData = {};

  // Allow updating paymentMethods and subscriptionId
  if (updates.paymentMethods !== undefined) {
    updateData.paymentMethods = updates.paymentMethods;
  }
  if (updates.subscriptionId !== undefined) {
    updateData.subscriptionId = updates.subscriptionId;
  }

  // Update other fields as existing
  if (updates.name) updateData.name = updates.name;
  if (updates.email) updateData.email = updates.email;
  if (updates.phone) updateData.phone = updates.phone;
  if (updates.screeningStatus) updateData.screeningStatus = updates.screeningStatus;
  if (updates.matchingProfile) updateData.matchingProfile = updates.matchingProfile;
  if (updates.isActive !== undefined) updateData.isActive = updates.isActive;

  const updatedTenant = await prisma.tenant.update({
    where: { id: tenantId },
    data: updateData
  });

  return updatedTenant;
};

module.exports = {
  updateTenant,
  // Assume other methods like createTenant, getTenant exist
};